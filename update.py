from flask_app import db
import requests

# Sets initial date from which to start gathering data
initial_date = "1970-01-01T00:00:00:000 UTC%2D07:00"

# NVD API querry
NVD_api_url = "https://services.nvd.nist.gov/rest/json/cves/1.0/"
NVD_api_key = "?apiKey=45e4addc-5818-445f-83b0-8e77d5594d2a"
# Currently set to gather all vulnerabilities between 2/1/22 and 2/4/22
# Date format:
# yyyy-MM-ddTHH:mm:ss:SSS Z
# Z = -7 for MDT
NVD_start_date = "&pubStartDate=2022-02-01T00:00:00:000 UTC%2D07:00"
NVD_end_date = "&pubEndDate=2022-02-04T00:00:00:000 UTC%2D07:00"
response = requests.get(NVD_api_url+NVD_api_key+NVD_start_date+NVD_end_date)
data = response.json()["result"]["CVE_Items"]

# provides information for Database table initialization
class Vulnerability(db.Model):

    __tablename__ = "vulnerabilities"

    id = db.Column(db.Integer, primary_key=True)
    cveID = db.Column(db.String(4096))
    vulnDdescription = db.Column(db.String(4096))
    cvssV3score = db.Column(db.String(4096))
    publishedDate = db.Column(db.String(4096))


# Turns API request data into Vulnerabilities
for cve in data:
    vulnerability = Vulnerability(
        cveID = cve["cve"]["CVE_data_meta"]["ID"],
        vulnDdescription = cve["cve"]["description"]["description_data"][0]["value"],
        cvssV3score = cve["impact"]["baseMetricV3"]["impactScore"],
        publishedDate = cve["publishedDate"]
    )
    db.session.add(vulnerability)
db.session.commit()     # Saves vulnerabilities to database