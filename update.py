from flask_app import db, Vulnerability
import requests
import time



# Sets initial date from which to start gathering data
######### Automation of updates still in progress #########
resultsPerPage = 1000
index = 0
numOfResults = 1

while index < numOfResults:
    # NVD API querry
    NVD_api_url = "https://services.nvd.nist.gov/rest/json/cves/1.0/"
    NVD_api_key = "?apiKey=45e4addc-5818-445f-83b0-8e77d5594d2a"
    NVD_resultsPerPage = "&resultsPerPage=" + str(resultsPerPage)
    NVD_startIndex = "&startIndex=" + str(index)
    # Date format:
    # yyyy-MM-ddTHH:mm:ss:SSS Z
    # Z = -7 for MDT
    NVD_start_date = "&pubStartDate=2022-01-01T00:00:00:000 UTC%2D07:00"
    NVD_end_date = "&pubEndDate=2022-02-01T00:00:00:000 UTC%2D07:00"
    # response = requests.get(NVD_api_url+NVD_api_key+NVD_start_date+NVD_end_date)
    response = requests.get(NVD_api_url+NVD_api_key+NVD_start_date+NVD_end_date+NVD_resultsPerPage)
    data = response.json()["result"]["CVE_Items"]

    numOfResults = response.json()["totalResults"]
    index+= response.json()["resultsPerPage"]

    # Turns API request data into Vulnerabilities
    for cve in data:
        vulnerability = Vulnerability(
            cveID = cve["cve"]["CVE_data_meta"]["ID"],
            vulnDdescription = cve["cve"]["description"]["description_data"][0]["value"],
            cvssV3score = cve["impact"]["baseMetricV3"]["impactScore"],
            publishedDate = cve["publishedDate"]
        )
        print(vulnerability.cveID)
        db.session.add(vulnerability)
    db.session.commit()     # Saves vulnerabilities to database

    print(numOfResults)
    print(index)
    #time.sleep(65)